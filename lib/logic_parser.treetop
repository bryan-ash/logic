grammar Logic
  rule disjunction
    left:conjunction tail:or_tail <BinaryDecision>
  end

  rule conjunction
    left:primitive tail:and_tail <BinaryDecision>
  end

  rule and_tail
    (operator:and_operator operand:primitive)* <Tail>
  end

  rule or_tail
    (operator:or_operator operand:conjunction)* <Tail>
  end

  rule and_operator
    (space and space / space? '&&' space?) <And>
  end

  rule or_operator
    (space or space / space? '||' space?) <Or>
    /
    (space xor space / space? '^' space?) <Xor>
  end

  rule primitive
    negation / condition / parenthesized
  end

  rule negation
    (not space / '!' space?) operand:primitive <Negation>
  end

  rule condition
    [A-Za-z_]+ <Condition>
  end

  rule parenthesized
    '(' space? contents:disjunction space? ')' <Parenthesized>
  end

  rule and
    [aA] [nN] [dD]
  end

  rule not
    [nN] [oO] [tT]
  end

  rule or
    [oO] [rR]
  end

  rule xor
    [xX] [oO] [rR]
  end

  rule space
    [ \t\n\r]+
  end
end
